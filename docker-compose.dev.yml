version: '3'

services:
  common_db:
    image: "mysql"
    # volumes:
      # - './data/Common:/var/opt/mssql/data'
    ports:
      - "8033:3306"
    environment: 
      - MYSQL_ROOT_PASSWORD: "Cn0gh0wtyny0"
  fuel_optimization:
    build:
      dockerfile: dev.Dockerfile
    ports:
      - "8003:8000"
    volumes:
      - './src/Fleet.FuelOptimization:/app'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
  fuel_stations:
    build:
      dockerfile: dev.Dockerfile
    ports:
      - "8007:8000"
    volumes:
      - './src/Fleet.FuelStations:/app'
      - '/app/node_modules'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CHOKIDAR_USEPOLLING=true
  fuel_stations_core:
    entrypoint: /wait-for-it.sh common_db:3306 -t 0 --
    command: [ 'dotnet', 'watch', 'run', '--no-launch-profile' ]
    build:
      dockerfile: dev.Dockerfile
    ports:
      - "8008:8000"
    volumes:
      - './src/Fleet.FuelStationsCore:/app'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ConnectionStrings:FuelStations=Server=common_db;Port=3306;Database=FuelStations;Uid=root;Pwd=Cn0gh0wtyny0
      # - ASPNETCORE_ConnectionStrings:FuelStations=Server=common_db,1433;Database=FuelStations;User Id=sa;Password=Cn0gh0wtyny0;
    depends_on:
      - common_db
  transportation_management:
    entrypoint: /wait-for-it.sh common_db:3306 -t 0 --
    command: [ 'dotnet', 'watch', 'run', '--no-launch-profile' ]
    build:
      dockerfile: dev.Dockerfile
    ports:
      - "8004:8000"
    volumes:
      - './src/Fleet.TransportationManagement:/app'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ConnectionStrings:TransportationManagement=Server=common_db;Port=3306;Database=TransportationManagement;Uid=root;Pwd=Cn0gh0wtyny0
      # - ASPNETCORE_ConnectionStrings:TransportationManagement=Server=common_db,1433;Database=TransportationManagement;User Id=sa;Password=Cn0gh0wtyny0;
    depends_on:
      - common_db
  ui:
    build:
      dockerfile: dev.Dockerfile
    ports:
      - "8006:3000"
    volumes:
      - './src/Fleet.UI/public:/app/public'
      - './src/Fleet.UI/src:/app/src'
    environment:
      - NODE_ENV=development
      - REACT_APP_FM_URL=https://localhost:8443/fm
      - REACT_APP_FS_URL=https://localhost:8443/fs
      - REACT_APP_TM_URL=https://localhost:8443/tm
      - CHOKIDAR_USEPOLLING=true
  gateway:
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - './nginx/development.conf:/etc/nginx/env/development.conf'
    environment:
      - NGINX_HOST=localhost
      - NGINX_EXT_SSL_PORT=8443