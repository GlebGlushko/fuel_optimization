load_module modules/ngx_http_js_module.so;

user              nginx;
worker_processes  1;
pid               /var/run/nginx.pid;

events { worker_connections 1024; }

http {
    js_include  /usr/share/nginx/scripts/oauth2.js;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log   warn; # to see detailed introspection info set to 'debug'

    # maps.conf: map for $access_token, $expires and $status_text variables
    include  /etc/nginx/conf.d/maps.conf;

    # this is where token introspection responses will be stored if proxy_cache is enabled
    proxy_cache_path /var/cache/nginx/tokens levels=1 keys_zone=token_responses:1m max_size=10m;

    # if you want to limit requests you can use this (but be careful - if there are too many requests, some of them are going to get 503 responses)
    #limit_req_zone         $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens           off;
    sendfile                on;
    sendfile_max_chunk      1m;
    keepalive_timeout       60;
    client_body_timeout     10;
    client_header_timeout   10;
    send_timeout            10;

    # upstreams.conf
    include  /etc/nginx/conf.d/upstreams.conf;

    server {
        listen      80;
        server_name ${NGINX_HOST};
        # add_header  Strict-Transport-Security max-age=15768000;
        # return      http://${NGINX_HOST}:8080;
        location /{
          proxy_pass http://ui:3000/;
        }
        # return      301 https://${NGINX_HOST}:${NGINX_EXT_SSL_PORT}$request_uri;
    }

    include /etc/nginx/snippets/ssl.conf;

    server {
        listen      443 ssl default_server;
        server_name _;
        return      301 https://${NGINX_HOST}:${NGINX_EXT_SSL_PORT}$request_uri;
    }

    server {
        listen       443 ssl;
        server_name  ${NGINX_HOST};

        include /etc/nginx/env/*.conf; # development.conf | production.conf
        include /etc/nginx/proxy_headers;
        include /etc/nginx/snippets/proxy.conf;
        include /etc/nginx/snippets/oauth.conf;

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains;";
        expires $expires;

        # Error pages configuration
        error_page 497 https://$server_name:${NGINX_EXT_SSL_PORT}$request_uri;
        error_page 500 501 502 503 504 505 506 507 508 510 511 /error.html;
        location = /error.html {
          ssi on;
          internal;
          root /usr/share/nginx/html;
        }


        location ~ ^/fs/(?<url>.*) {
            # auth_request /_oauth2_token_introspection;

            proxy_pass http://fs_api/$url;
        }

        location ~ ^/tm/(?<url>.*) {
            # auth_request /_oauth2_token_introspection;


            proxy_pass http://tm_api/$url;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}